{"version":3,"file":"static/js/7062.27215604.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","_ref","_this$props$id","_this$props$options2","defaultProps","container","load","current","Circle","Range","x","y","radius","contains","point","getDistance","position","intersects","range","pos1","pos2","distPos","Math","abs","r","sqrt","Rectangle","size","pow","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","size2","w2","h2","Vector","Vector3d","xOrCoords","origin","create","clone","source","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","concat","atan2","getLengthSq","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","AnimationOptions","count","enable","speed","decay","delay","sync","data","setRangeValue","RangedAnimationOptions","mode","startValue","minimumValue","OptionsColor","value","color","isString","Random","ValueWithRandom","random","isBoolean","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","s","l","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","input","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","status","loops","maxLoops","time","delayTime","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","font","weight","fonts","arrayRandomIndex","isPointInside","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","_len","sources","_key","sourceIsArray","destDict","map","isDivModeEnabled","divs","findItemFromSingleOrMultiple","divModeExecute","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","bounce","horizontal","vertical","circleBounce","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","getPositionOrSize","positionOrSize","canvasSize","rest","arg","isFunction","setTransformValue","newFactor","newValue","_factor$key","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","stop","remove","cb","_particle$getStrokeCo","spawning","destroyed","pfColor","psColor","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","obs","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","_data$ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","_data$detectsOn","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","_data$outModes","_data$path","OpacityAnimation","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","area","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","character","_this$options$charKey","custom","_this$options$imageKe","images","polygon","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","_groupOptions$number","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","_params$id","_params$element","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","breakpoint","pauseAnimation","resumeAnimation","initPjs","particlesJS","pJSDom","catch","initParticlesJS","_particle$pathGenerat","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_initSpin","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","_shapeData$angle","updateColorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","maxValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","BounceOutMode","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","_particle$retina$size","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadBasic","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","ExternalInteractorBase","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","_particle$interactivi","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","lineLinked","line_linked","_data$links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","_data$quantity","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","_getGIFLoopAmount","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","_particle$gifFrame","offscreenCanvas","OffscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","_ref2","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","_shapeData$cap","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ParticlesInteractorBase","_p1$retina$attractDis","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","_source$links","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","_polygon$sides","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","updateStrokeColor","validTypes","TextDrawer","_character$style","_character$weight","_character$font","textData","randomIndexData","fillText","strokeText","promises","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater"],"sourceRoot":""}