{"version":3,"file":"static/js/5719.b754b593.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","_ref","_this$props$id","_this$props$options2","defaultProps","container","load","current","Circle","Range","x","y","radius","contains","point","getDistance","position","intersects","range","pos1","pos2","distPos","Math","abs","r","sqrt","Rectangle","size","pow","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","size2","w2","h2","Vector","Vector3d","xOrCoords","origin","create","clone","source","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","concat","atan2","getLengthSq","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","OptionsColor","value","data","color","isString","Random","enable","minimumValue","ValueWithRandom","random","isBoolean","setRangeValue","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","s","l","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","input","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","speed","decay","status","loops","maxLoops","count","time","delayTime","delay","sync","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","font","weight","fonts","arrayRandomIndex","isPointInside","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","_len","sources","_key","sourceIsArray","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","bounce","horizontal","vertical","circleBounce","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","startValue","getPositionOrSize","positionOrSize","canvasSize","rest","arg","isFunction","setTransformValue","newFactor","newValue","_factor$key","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","stop","remove","cb","_particle$getStrokeCo","spawning","destroyed","pfColor","psColor","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","obs","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","_data$ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","_data$detectsOn","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","_data$outModes","_data$path","AnimationOptions","RangedAnimationOptions","OpacityAnimation","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","area","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","character","_this$options$charKey","custom","_this$options$imageKe","images","polygon","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","_groupOptions$number","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","_params$id","_params$element","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","breakpoint","pauseAnimation","resumeAnimation","initPjs","particlesJS","pJSDom","catch","initParticlesJS","_particle$pathGenerat","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_initSpin","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","_shapeData$angle","updateColorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","maxValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","BounceOutMode","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","_particle$retina$size","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadBasic","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","ExternalInteractorBase","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","_particle$interactivi","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","lineLinked","line_linked","_data$links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","_data$quantity","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","_getGIFLoopAmount","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","_particle$gifFrame","offscreenCanvas","OffscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","_ref2","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","_shapeData$cap","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ParticlesInteractorBase","_p1$retina$attractDis","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","_source$links","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","_polygon$sides","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","updateStrokeColor","validTypes","TextDrawer","_character$style","_character$weight","_character$font","textData","randomIndexData","fillText","strokeText","promises","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater"],"sourceRoot":""}