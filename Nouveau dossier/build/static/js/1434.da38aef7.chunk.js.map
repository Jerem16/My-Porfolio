{"version":3,"file":"static/js/1434.da38aef7.chunk.js","mappings":"2JAIA,MAUA,EAV0BA,IAAmB,IAAlB,SAAEC,GAAUD,EACnC,MAAME,GAAcC,EAAAA,EAAAA,GAAY,qBAEhC,OAAgB,OAAXD,QAAW,IAAXA,GAAAA,EAAaE,SAIXH,EAASC,IAHLG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,GAGiB,C,yDCRhC,MAAMC,EAAYP,IAAmB,IAAlB,SAAEQ,GAAUR,EAC3B,OACIK,EAAAA,EAAAA,KAAA,QAAMI,UAAS,GAAAC,OAAKF,GAAWP,UAC3BI,EAAAA,EAAAA,KAAA,OACIM,QAAQ,kBACRC,iBAAiB,kBACjBC,SAAS,WACTJ,UAAU,SAAQR,UAElBI,EAAAA,EAAAA,KAAA,QACII,UAAU,aACVK,EAAE,2UAGP,EAGf,EAAeC,EAAAA,KAAWR,E,mEClB1B,MAAMS,EAAQA,KACV,MAAMC,GAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,MAAMH,eACxD,OACIZ,EAAAA,EAAAA,KAAA,QAAAJ,UACII,EAAAA,EAAAA,KAAA,OAAKM,QAAQ,cAAcU,OAAO,MAAMZ,UAAU,QAAOR,UACrDI,EAAAA,EAAAA,KAAA,QACIiB,KAAML,EACNH,EAAE,0RAGP,EAIf,EAAeC,EAAAA,KAAWC,E,8GCT1B,MAAMO,EAAevB,IAAsC,IAArC,gBAAEwB,EAAe,WAAEC,GAAYzB,EACjD,OACIK,EAAAA,EAAAA,KAACqB,EAAAA,EAAiB,CAAAzB,SACZC,IACE,GAAIsB,EAAiB,CACjB,MAAMG,EAAczB,EAAYE,SAASwB,MACpCC,GAASA,EAAKC,KAAON,EAAgBM,KAE1C,GAAIH,EAAa,CACb,MAAMI,EAAkBC,EAAYJ,MAC/BC,GAASA,EAAKC,KAAOH,EAAYG,KAEtC,OACIG,EAAAA,EAAAA,MAAA,OAAKxB,UAAU,mBAAkBR,SAAA,EAC7BI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAeqB,GAAG,eAAc7B,UAC3CgC,EAAAA,EAAAA,MAAA,OAAKxB,UAAU,qBAAoBR,SAAA,EAC/BI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,OAAMR,UACjBI,EAAAA,EAAAA,KAAA,OACIM,QACIoB,EAAgBpB,QAEpBU,OAAO,MACPR,SAAS,WACTJ,UAAU,WAAUR,UAEpBI,EAAAA,EAAAA,KAAA,QACIS,EAAGiB,EAAgBG,YAI/B7B,EAAAA,EAAAA,KAAA,MAAAJ,SAAK0B,EAAYQ,SACjB9B,EAAAA,EAAAA,KAAA,KAAAJ,SAAI0B,EAAYS,oBAChB/B,EAAAA,EAAAA,KAAA,MAAAJ,SACK0B,EAAYU,QAAQC,KACjB,CAACC,EAAQC,KACLP,EAAAA,EAAAA,MAAA,MAAAhC,SAAA,EAKII,EAAAA,EAAAA,KAACW,EAAAA,EAAK,IACLuB,IAAM,UAAA7B,OAJK,GAAR8B,SASpBnC,EAAAA,EAAAA,KAAA,KACII,UAAU,MACVgC,KAAMd,EAAYe,KAAKC,IACvBC,QAASnB,EAAWxB,SAEnB0B,EAAYe,KAAKP,cAI9B9B,EAAAA,EAAAA,KAAA,UAAQwC,KAAK,SAASD,QAASnB,EAAWxB,UACtCI,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACuC,KAAK,cAIhC,CACJ,IAEY,EAI5B,EAAe/B,EAAAA,KAAWQ,E","sources":["components/03-Services/ServiceDataLoader.jsx","components/99-Svg_Icon/CloseIcon.jsx","components/99-Svg_Icon/check.jsx","components/Modal/ModalService/ModalService.jsx"],"sourcesContent":["import React from \"react\";\nimport useLangData from \"../../utils/useLangData\";\n\n\nconst ServiceDataLoader = ({ children }) => {\n    const serviceData = useLangData(\"dataServices.json\");\n\n    if (!serviceData?.services) {\n        return <></>;\n    }\n\n    return children(serviceData);\n};\n\nexport default ServiceDataLoader;\n","import React from \"react\";\n\n\nconst CloseIcon = ({ addClass }) => {\n    return (\n        <span className={`${addClass}`}>\n            <svg\n                viewBox=\"0 0 428.8 428.8\"\n                enableBackground=\"new 0 0 512 512\"\n                xmlSpace=\"preserve\"\n                className=\"closed\"\n            >\n                <path\n                    className=\"close-icon\"\n                    d=\"M418.2 366.9L265.5 214.2 417.8 61.9c14.1-14.1 14.1-36.9 0-50.9h0c-14-14.1-36.8-14.1-50.9 0L214.6 163.3 61.9 10.5c-14.1-14-36.9-14-50.9 0h0c-14.1 14.1-14.1 36.9 0 51l152.7 152.7L10.5 367.3c-14.1 14.1-14.1 36.9 0 50.9h0c14.1 14.1 36.9 14.1 50.9 0l153.1-153.1 152.7 152.7c14.1 14.1 36.9 14.1 50.9 0h0c14.2-14 14.2-36.8.1-50.9z\"\n                />\n            </svg>\n        </span>\n    );\n};\nexport default React.memo(CloseIcon);\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Check = () => {\r\n    const currentTheme = useSelector((state) => state.theme.currentTheme);\r\n    return (\r\n        <span>\r\n            <svg viewBox=\"0 0 512 512\" height=\"1em\" className=\"check\">\r\n                <path\r\n                    fill={currentTheme}\r\n                    d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"\r\n                />\r\n            </svg>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default React.memo(Check);\r\n","import React from \"react\";\n\nimport ServiceDataLoader from \"../../03-Services/ServiceDataLoader\";\nimport CloseIcon from \"../../99-Svg_Icon/CloseIcon\";\nimport serviceIcon from \"../../../assets/data/serviceIcon.json\";\nimport Check from \"../../99-Svg_Icon/check\";\n\nconst ModalService = ({ selectedService, closeModal }) => {\n    return (\n        <ServiceDataLoader>\n            {(serviceData) => {\n                if (selectedService) {\n                    const serviceItem = serviceData.services.find(\n                        (item) => item.id === selectedService.id\n                    );\n                    if (serviceItem) {\n                        const serviceIconData = serviceIcon.find(\n                            (item) => item.id === serviceItem.id\n                        );\n                        return (\n                            <div className=\"modal-background\">\n                                <div className=\"service-item\" id=\"modalService\">\n                                    <div className=\"service-item-inner\">\n                                        <div className=\"icon\">\n                                            <svg\n                                                viewBox={\n                                                    serviceIconData.viewBox\n                                                }\n                                                height=\"1em\"\n                                                xmlSpace=\"preserve\"\n                                                className=\"icon-fsa\"\n                                            >\n                                                <path\n                                                    d={serviceIconData.icon}\n                                                />\n                                            </svg>\n                                        </div>\n                                        <h4>{serviceItem.title}</h4>\n                                        <p>{serviceItem.modalDescription}</p>\n                                        <ul>\n                                            {serviceItem.details.map(\n                                                (detail, index) => (\n                                                    <li\n                                                        key={`ServLi_${\n                                                            index * 70\n                                                        }`}\n                                                    >\n                                                        <Check />\n                                                        {detail}\n                                                    </li>\n                                                )\n                                            )}\n                                        </ul>\n                                        <a\n                                            className=\"btn\"\n                                            href={serviceItem.link.url}\n                                            onClick={closeModal}\n                                        >\n                                            {serviceItem.link.title}\n                                        </a>\n                                    </div>\n                                </div>\n                                <button type=\"button\" onClick={closeModal}>\n                                    <CloseIcon name=\"close\" />\n                                </button>\n                            </div>\n                        );\n                    }\n                }\n            }}\n        </ServiceDataLoader>\n    );\n};\n\nexport default React.memo(ModalService);\n"],"names":["_ref","children","serviceData","useLangData","services","_jsx","_Fragment","CloseIcon","addClass","className","concat","viewBox","enableBackground","xmlSpace","d","React","Check","currentTheme","useSelector","state","theme","height","fill","ModalService","selectedService","closeModal","ServiceDataLoader","serviceItem","find","item","id","serviceIconData","serviceIcon","_jsxs","icon","title","modalDescription","details","map","detail","index","href","link","url","onClick","type","name"],"sourceRoot":""}